#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &default_kscan;
        zmk,matrix_transform = &default_transform;
        // This would require _another_ PIO device to get setup. I can do it later.
        //zmk,underglow = &status_led;
        zephyr,display = &nice_view;
    };

    default_kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";

        row-gpios = <&gpio0 28 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&gpio0 27 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&gpio0 26 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&gpio0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&gpio0 3 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&gpio0 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&gpio0 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
        col-gpios = <&gpio0 8 (GPIO_ACTIVE_HIGH)>,
                    <&gpio0 9 (GPIO_ACTIVE_HIGH)>,
                    <&gpio0 10 (GPIO_ACTIVE_HIGH)>,
                    <&gpio0 11 (GPIO_ACTIVE_HIGH)>,
                    <&gpio0 12 (GPIO_ACTIVE_HIGH)>,
                    <&gpio0 13 (GPIO_ACTIVE_HIGH)>;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <10>;
        columns = <6>;

        map = <
            RC(0,5) RC(0,4) RC(0,3) RC(0,2) RC(0,1) RC(0,0)      RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
            RC(1,5) RC(1,4) RC(1,3) RC(1,2) RC(1,1) RC(1,0)      RC(6,0) RC(6,1) RC(6,2) RC(6,3) RC(6,4) RC(6,5)
            RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)      RC(7,0) RC(7,1) RC(7,2) RC(7,3) RC(7,4) RC(7,5)
            RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1) RC(3,0)      RC(8,0) RC(8,1) RC(8,2) RC(8,3) RC(8,4) RC(8,5)
                    RC(4,4) RC(4,3) RC(4,2) RC(4,1) RC(4,0)      RC(9,0) RC(9,1) RC(9,2) RC(9,3) RC(9,4)
        >;
    };
};

// Disable uart0 since its pins collide with the pins I'm using for PIO SPI
&uart0 {
        status = "disabled";
};

&pinctrl {
        pio0_spi0_default: pio0_spi0_default {
                group1 {
                        // clk, mosi
                        pinmux = <PIO0_P2>, <PIO0_P0>;
                };
        };
        pio0_spi0_sleep: pio0_spi0_sleep {
                group1 {
                        // clk, mosi
                        pinmux = <PIO0_P2>, <PIO0_P0>;
                };
        };
};

&pio0 {
        status = "okay";
        pio-spi {
                compatible = "raspberrypi,pico-spi-pio";
                #address-cells = <1>;
                #size-cells = <0>;
                clocks = <&system_clk>;
                clock-frequency = <1000000>;
                pinctrl-0 = <&pio0_spi0_default>;
                pinctrl-1 = <&pio0_spi0_sleep>;
                pinctrl-names = "default", "sleep";
                status = "okay";
                cs-gpios = <&gpio0 1 GPIO_ACTIVE_HIGH>;
                clk-gpios = <&gpio0 2 GPIO_ACTIVE_HIGH>;
                mosi-gpios = <&gpio0 0 GPIO_ACTIVE_HIGH>;
                // This GPIO is not connected to the waveshare zero, it seems I need something though
                miso-gpios = <&gpio0 25 GPIO_ACTIVE_HIGH>;
                nice_view: niew-view@0 {
                        status = "okay";
                        compatible = "sharp,ls0xx";
                        reg = <0>;
                        width = <160>;
                        height = <68>;
                        spi-max-frequency = <1000000>;
                        /delete-property/ spi-cpol; // CPOL 0
                        /delete-property/ spi-cpha; // CPHA 0
                };
        };
};
