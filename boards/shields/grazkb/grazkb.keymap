/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /*
            * ┌───┬───┬───┬───┬───┬───┐                    ┌───┬───┬───┬───┬───┬───┐
            * │ ` │ 1 │ 2 │ 3 │ 4 │ 5 │                    │ 7 │ 7 │ 8 │ 9 │ 0 │ - │
            * ├───┼───┼───┼───┼───┼───┤                    ├───┼───┼───┼───┼───┼───┤
            * │ > │ q │ w │ e │ r │ t │                    │ y │ u │ i │ o │ p │ * │
            * ├───┼───┼───┼───┼───┼───┤                    ├───┼───┼───┼───┼───┼───┤
            * │ ^ │ a │ s │ d │ f │ g │                    │ h │ j │ k │ l │ ; │ ' │
            * ├───┼───┼───┼───┼───┼───┤                    ├───┼───┼───┼───┼───┼───┤
            * │ s │ z │ x │ c │ v │ h │                    │ n │ m │ , │ . │ / │ s │
            * └───┴───┼───┼───┼───┼───┼───┬───┐    ┌───┬───┼───┼───┼───┼───┼───┴───┘
            *         │ x │ x │ x │   │ x │ x │    │ x │ x │   │ x │ x │ x │
            *         └───┴───┴───┘   └───┴───┘    └───┴───┘   └───┴───┴───┘
            */
            bindings = <
                &kp GRAVE    &kp N1       &kp N2      &kp N3   &kp N4     &kp N5      &kp N6      &kp N7  &kp N8      &kp N9      &kp N0      &kp BSPC
                &kp TAB      &kp Q        &kp W       &kp F    &kp P      &kp V       &kp J       &kp L   &kp U       &kp Y       &kp SEMI    &kp BSLH
                &lt 3 ESC    &kp A        &kp R       &kp S    &kp T      &kp G       &kp M       &kp N   &kp E       &kp I       &kp O       &kp SQT
                &kp LSHFT    &kp Z        &kp X       &kp C    &kp D      &kp B       &kp K       &kp H   &kp COMMA   &kp DOT     &kp FSLH    &kp RSHFT
                             &none        &kp LALT    &kp LGUI &kp SPACE  &kp ESC     &kp BSPC    &lt 1 ENTER &none    &none      &mo 2
            >;
        };
        symbol_layer {
            bindings = <
                &kp ESC      &kp F1       &kp F2      &kp F3   &kp F4     &kp F5      &kp F6      &kp F7     &kp F8      &kp F9      &kp F10     &kp F11
                &trans       &none        &none       &kp UP   &none      &none       &none       &kp LBKT   &kp RBKT    &kp EQUAL   &none       &kp F12
                &trans       &none        &kp LEFT    &kp DOWN &kp RIGHT  &none       &none       &kp LPAR   &kp RPAR    &none       &none       &none
                &trans       &none        &none       &none    &none      &none       &none       &kp LBRC   &kp RBRC    &none       &none       &kp RSHFT
                             &none        &trans      &trans   &trans     &trans      &trans      &trans      &trans   &trans     &trans
            >;
        };
        layer_layer {
            bindings = <
                &none        &none        &none       &none    &none      &none       &none       &none      &none       &none       &none       &none
                &none        &none        &none       &none    &none      &none       &none       &none      &none       &none       &none       &none
                &none        &none        &none       &none    &none      &none       &none       &none      &none       &none       &none       &none
                &none        &none        &none       &none    &none      &none       &none       &none      &none       &none       &none       &none
                             &none        &none       &none    &none      &none       &none       &to 4     &kp K_VOL_DN &kp K_VOL_UP &none
            >;
        };
        ctrl_layer {
            bindings = <
                &kp LC(GRAVE)  &kp LC(N1)   &kp LC(N2)    &kp LC(N3) &kp LC(N4)   &kp LC(N5)    &kp LC(N6)    &kp LC(N7)  &kp LC(N8)    &kp LC(N9)    &kp LC(N0)    &kp LC(BSPC)
                &kp LC(TAB)    &kp LC(Q)    &kp LC(W)     &kp LC(F)  &kp LC(P)    &kp LC(V)     &kp LC(J)     &kp LC(L)   &kp LC(U)     &kp LC(Y)     &kp LC(SEMI)  &kp LC(BSLH)
                &lt LC(3) ESC  &kp LC(A)    &kp LC(R)     &kp LC(S)  &kp LC(T)    &kp LC(G)     &kp LC(M)     &kp LC(N)   &kp LC(E)     &kp LC(I)     &kp LC(O)     &kp LC(SQT)
                &kp LC(LSHFT)  &kp LC(Z)    &kp LC(X)     &kp LC(C)  &kp LC(D)    &kp LC(B)     &kp LC(K)     &kp LC(H)   &kp LC(COMMA) &kp LC(DOT)   &kp LC(FSLH)  &kp LC(RSHFT)
                               &trans       &kp LC(LALT)  &kp LC(LGUI) &kp LA(LC(LGUI)) &trans  &trans        &trans      &trans        &trans        &trans
            >;
        };
    };
};
